// //–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é min(a, b), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î
// //–º–µ–Ω—à–µ –∑ —á–∏—Å–µ–ª a, b
// //–ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º—É—î —á–∏—Å–ª–∞
// function min(a, b) {
//     if (typeof a !== "number" || typeof b !== "number") {
//         alert("invalid")
//         return
//     }
//     return Math.min(a, b);
//     // return a < b ? a : b;
// }

// // console.log(typeof typeof true);

// const result = min(2, 5);
// console.log(result);

//–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findSmallerNumber(numbers)
//—è–∫–∞ —à—É–∫–∞—î –Ω–∞–π–º–µ–Ω—à–µ –≤ –º–∞—Å–∏–≤—ñ
//–î–æ–¥–∞–π –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤
/* const numbers = [100, 2, 5, 35, 56, 12, 24, 7, 80, 3]; */

/* function findSmallerNumber(numbers) {
    if (!Array.isArray(numbers)) {
        console.log('Error');
        return 0;
    }

    let num = numbers[0];

    for (let i = 1; i < numbers.length; i += 1) {
        if (numbers[i] < num) {
            num = numbers[i];
        }
    }

    return num;
}

const min = findSmallerNumber("numbers");

console.log(min); */

//–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é caculculateAverage()
//—è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
//–ê—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.
//–î–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ü–µ —á–∏—Å–ª–∞.

// function caculculateAverage() {
//     console.log(arguments);
//     let avarege = 0;
//     let count =0;

//     for (let argument of arguments) {
//         if (typeof argument !== "number") {
//             continue
//         }
//         avarege += argument
//         count += 1
//     }
//     console.log((avarege/count).toFixed(1));
// }
// caculculateAverage(2, 5, 7, 'f', 't')

// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ styles –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´–î–∂–∞–∑¬ª —Ç–∞ ¬´–ë–ª—é–∑¬ª.
//–î–æ–¥–∞–π—Ç–µ "–†–æ–∫-–Ω-—Ä–æ–ª" –≤ –∫—ñ–Ω–µ—Ü—å.
// –ó–∞–º—ñ–Ω—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è "–ë–ª—é–∑" –Ω–∞ "–ö–ª–∞—Å–∏–∫–∞".
//–í–∏–¥–∞–ª–∏—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É —ñ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
//–í—Å—Ç–∞–≤—Ç–µ ¬´–†–µ–ø¬ª —ñ ¬´–†–µ–≥–≥—ñ¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
// const styles = ["–î–∂–∞–∑", "–ë–ª—é–∑"];
// styles.push("–†–æ–∫-–Ω-—Ä–æ–ª");
// console.log(styles);
// // console.log(styles.push("–†–æ–∫-–Ω-—Ä–æ–ª"));
// console.log(styles.splice(1, 1, "–ö–ª–∞—Å–∏–∫–∞"));
// console.log(styles);

// // console.log(styles.splice(0, 1)[0]);

// styles.unshift("–†–µ–ø", "–†–µ–≥–≥—ñ");
// console.log(styles);

//–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±'—î–∫—Ç–∞ user,
//–ü–æ—Å–ª—ñ–¥–æ–≤–Ω–æ:
//1 –¥–æ–¥–∞—Å—Ç—å –ø–æ–ª–µ mood –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 'happy'
//2 –∑–∞–º—ñ–Ω–∏—Ç—å hobby –Ω–∞ 'skydiving'
//3 –∑–∞–º—ñ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è premium –Ω–∞ false
//4 –≤–∏–≤–æ–¥–∏—Ç—å –≤–º—ñ—Å—Ç –æ–±'—î–∫—Ç–∞ users —É —Ñ–æ—Ä–º–∞—Ç—ñ
//–∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ Object.keys() —ñ for...of
// const user = {
//    name: "John",
//    age: 20,
//    hobby: "tenis",
//    premium: true,
// };

// user.mood = 'happy';

// // user['mood']='happy';

// // const userMood = {} ;
// // user[userMood] = 'happy';

// // user.hobby = 'skydiving';

// // user['hobby'] =  'skydiving';

// const urerHobby = 'hobby';

// user[urerHobby] = 'skydiving';

// const userKeys = Object.keys(user);

// for (const key of userKeys) {
//     console.log(`${key}:${user[key]}`);
// }

// // console.log(user);

// // –ó–∞–¥–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

// const numbers = [1, 2, 3, 4, 5, 6, 7, 8]

// // console.log(numbers.reverse());

// for (let i = 0; i < numbers.length/2; i += 1) {
//     let template = numbers[i];
//     numbers[i] = numbers[numbers.length - 1 - i];
//     numbers[numbers.length - 1 - i] = template;

// }

// console.log(numbers);

// const people = [
//   {
//     name: 'Alex',
//     know: ['Alex', 'Jhon'],
//   },
//   {
//     name: 'Jhon',
//     know: [],
//   },
//   {
//     name: 'Eva',
//     know: ['Alex', 'Jhon'],
//   },
//   {
//     name: 'Ivan',
//     know: ['Jhon', 'Eva'],
//   },
// ];
//–Ω–∞—Ä—Ü–∏—Å  'Jhon'

// const people1 = [
//   {
//     name: 'Alex',
//     know: ['Alex', 'Jhon'],
//   },
//   {
//     name: 'Jhon',
//     know: [],
//   },
//   {
//     name: 'Eva',
//     know: [],
//   },
//   {
//     name: 'Ivan',
//     know: ['Jhon', 'Eva'],
//   },
// ];
//–Ω–µ–º–∞—î –Ω–∞—Ä—Ü–∏—Å–∞'

// const people3 = [
//   {
//     name: 'Alex',
//     know: ['Alex', 'Eva'],
//   },
//   {
//     name: 'Jhon',
//     know: [],
//   },
//   {
//     name: 'Eva',
//     know: ['Alex', 'Jhon'],
//   },
//   {
//     name: 'Ivan',
//     know: ['Jhon', 'Eva'],
//   },
// ];
//–Ω–µ–º–∞—î –Ω–∞—Ä—Ü–∏—Å–∞

// const people4 = [
//   {
//     name: 'Alex',
//     know: ['Alex', 'Jhon'],
//   },
//   {
//     name: 'Jhon',
//     know: ['Eva'],
//   },
//   {
//     name: 'Eva',
//     know: ['Alex', 'Jhon'],
//   },
//   {
//     name: 'Ivan',
//     know: ['Jhon', 'Eva'],
//   },
// ];
//–Ω–µ–º–∞—î –Ω–∞—Ä—Ü–∏—Å–∞'
// –ù–∞—Ä—Ü–∏—Å–∞ –∑–Ω–∞—é—Ç—å –≤—Å—ñ, –Ω–∞—Ä—Ü–∏—Å –Ω–µ–∑–Ω–∞—î –Ω—ñ–∫–æ–≥–æ

// const findNarcissus = (arr) => {
//     let narcissus = "";
//     for (let obj of arr) {
//         if(obj.know.length === 0) {
//             narcissus = obj.name
//         }
//     }
//     if (!narcissus) return '–Ω–µ–º–∞—î –Ω–∞—Ä—Ü–∏—Å–∞'
//     for (let obj of arr) {
//         if(obj.name === narcissus) {
//             continue
//         }
//         if(!obj.know.includes(narcissus)) {
//             return "–Ω–µ–º–∞—î –Ω–∞—Ä—Ü–∏—Å–∞"
//         }
//     }
//     return narcissus
// }

// console.log(findNarcissus(people4));

//–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é updateObject, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î
//–Ω–æ–≤–∏–π –æ–±'—î–∫—Ç –±–µ–∑ –∑–∞–∑–Ω–∞—á–µ–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
//–û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ({a: 1, b: 2}, 'b') => {a: 1}

// const superObj = { a: 1, b: 2, c: 4, d: 11 };
// const updateObject = function (obj, removeKey) {
//   const newObj = { ...obj };
//   delete newObj[removeKey];
//   return newObj
// }

// console.log(updateObject(superObj, 'b'));;
// console.log(superObj);
// const updateObject = function (obj, removeKey) {
//   const keys = Object.keys(obj);
//   const newObj = {}
//   for (let key of keys) {
//     if (key === removeKey) {
//       continue;
//     }
//     newObj[key] = obj[key];
//   }
//   console.log(newObj);
//   return newObj
// }

// updateObject({ a: 1, b: 2, c: 4, d: 11}, 'b');

// –°—Ç–≤–æ—Ä—ñ—Ç—å –æ–±'—î–∫—Ç calculator —ñ–∑ —Ç—Ä—å–æ–º–∞ –º–µ—Ç–æ–¥–∞–º–∏
//read(a, b) - –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î —ó—Ö
//—è–∫ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–±'—î–∫—Ç–∞
//sum() –ø–æ–≤–µ—Ä—Ç–∞—î —Å—É–º—É –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
//mult() –ø–µ—Ä–µ–º–Ω–æ–∂—É—î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// const calculator = {
//   read(a, b) {
//     this.a = a;
//     this.b = b;
//   },
//   sum() {
//     if (!this.a && !this.b) {
//       return 0;
//     }
//     return this.a + this.b;
//   },

//   mult() {
//     if (!this.a && !this.b) {
//       return 0;
//     }
//     return this.a * this.b;
//   },
// };
// calculator.read(2, 5);
// console.log(calculator);
// console.log(calculator.sum());
// console.log(calculator.mult());

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–±'—î–∫—Ç
//—ñ —Ñ–æ—Ä–º—É—î –æ–±'—î–∫—Ç–∏ —É –Ω–æ–≤–æ–º—É –º–∞—Å–∏–≤—ñ —É —Ñ–æ—Ä–º–∞—Ç—ñ [key, value]
// const user6 = {
//   name: "John",
//   surName: "Stones",
//   age: 20,
//   hobby: "tenis",
//   haveCar: true,
//   merried: false,
// };

// function creatObj(obj) {
//   // console.log(Object.entries(obj));
//   const arr = [];
//   for (const key in obj) {
//     arr.push({ [key]: obj[key] });
//   }
//   console.log(arr);
// }
// creatObj(user6);
/*
 * –ü—Ä–∞—Ü—é –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É:
 * - getItems()
 * - add(product)
 * - remove(productName)
 * - clear()
 * - countTotalPrice()
 * - increaseQuantity(productName)
 * - decreaseQuantity(productName)
 *
 * { name: 'üçé', price: 50 }
 * { name: 'üçá', price: 70 }
 * { name: 'üçã', price: 60 }
 * { name: 'üçì', price: 110 }
 */

// const cart = {
//     items: [],
//     getItems() {
//         return this.items
//     },

//     add(product) {
//         for (let item of this.items) {
//             if (item.name === product.name) {
//                 item.quantity += 1;
//                 return
//             }
//         }
//         this.items.push({ ...product, quantity : 1 })

//     },

//     remove(productName) {
//         for (let i = 0; i < this.items.length; i += 1) {
//             if (this.items[i].name === productName) {
//                 this.items.splice(i, 1)
//                 return
//             }
//         }
//     },

//     clear() {
//         this.items = [];
//     },

//     countTotalPrice() {
//         let totalPrice = 0;

//         for (let item of this.items) {
//             totalPrice += item.price*item.quantity
//         }
//         return totalPrice;
//     },

//     increaseQuantity(productName) {
//         for (let i = 0; i < this.items.length; i += 1) {
//             if (this.items[i].name === productName) {
//                 this.items[i].quantity += 1;
//                 return
//             }
//         }
//     },

//     decreaseQuantity(productName) {
//         for (let i = 0; i < this.items.length; i += 1) {
//             if (this.items[i].name === productName) {
//                 this.items[i].quantity -= 1;
//                 if (this.items[i].quantity === 0) {
//                     this.items.splice(i, 1)
//                     return
//                 }
//             }
//         }
//     }
// }

// cart.add({ name: 'üçé', price: 50 });
// cart.add({ name: 'üçá', price: 70 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçã', price: 60 });
// cart.add({ name: 'üçì', price: 110 });
// cart.add({ name: 'üçì', price: 110 });

// cart.remove('üçã');
// cart.increaseQuantity('üçé');
// cart.decreaseQuantity('üçá');
// cart.decreaseQuantity('üçé');
// console.table(cart.getItems());
// console.log(cart.countTotalPrice());

/* const vehicles = [
  { make: 'Honda', model: 'CR-V', type: 'suv', amount: 14, price: 24045, onSale: true },
  { make: 'Honda', model: 'Accord', type: 'sedan', amount: 2, price: 22455, onSale: true },
  { make: 'Mazda', model: 'Mazda 6', type: 'sedan', amount: 8, price: 24195, onSale: false },
  { make: 'Mazda', model: 'CX-9', type: 'suv', amount: 7, price: 31520, onSale: true },
  { make: 'Toyota', model: '4Runner', type: 'suv', amount: 19, price: 34210, onSale: false },
  { make: 'Toyota', model: 'Sequoia', type: 'suv', amount: 16, price: 45560, onSale: false },
  { make: 'Toyota', model: 'Tacoma', type: 'truck', amount: 4, price: 24320, onSale: true },
  { make: 'Ford', model: 'F-150', type: 'truck', amount: 11, price: 27110, onSale: true },
  { make: 'Ford', model: 'Fusion', type: 'sedan', amount: 13, price: 22120, onSale: true },
  { make: 'Ford', model: 'Explorer', type: 'suv', amount: 6, price: 31660, onSale: false },
];

const smth = ({ model, amount }) => {
    console.log(model, amount);
}

vehicles.forEach(smth); */

//–î–∞–Ω–∏–π –º–∞—Å–∏–≤ —ñ–∑ —á–∏—Å–ª–∞–º–∏. –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —ñ–∑ –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤ —Ü–∏—Ö —á–∏—Å–µ–ª
//[5, 6, 7, 8, 9]

// function multiply (args) {const newArray = []

//     args.forEach((item)=>{
//         newArray.push(item*item)
//         });    console.log(newArray)
//         return
// }

// multiply([5, 6, 7, 8, 9])

// –î–∞–Ω–∏–π –º–∞—Å–∏–≤ —ñ–∑ —á–∏—Å–ª–∞–º–∏. –ß–∏—Å–ª–∞ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏–º–∏ —Ç–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω–∏–º–∏. –ó–Ω–∞–π–¥—ñ—Ç—å —Å—É–º—É –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ü—å–æ–≥–æ –º–∞—Å–∏–≤—É. [1, 2 , -5, -7 , -9, 2 , 5 , 4, -69, 85,-5]

// const numbers = [1, 2, -5, -7, -9, 2, 5, 4, -69, 85, -5];
// let sum = 0;
// const sum = function (arr) {
//     let total = 0;
//     arr.forEach((el) => {
//         if (el > 0) {
//             total += el;
//         }

//     })
//     console.log(total);
// }

// sum(numbers);

// function sumOfAll (array, positive, negative)  {
//     let sumPos= 0;
//     let sumNeg = 0;
// for (let i = 0; i < array.length; i++){
// if (array[i] > 0){
//    sumPos+= positive(array[i]);
// }else{
// sumNeg += negative(array[i]);
// }

// }
// console.log([sumPos, sumNeg])
// }

// const checkPositive = (item) => item;

// const checkNegative = (item)=> item;

// sumOfAll(numbers, checkPositive, checkNegative)

// –î–∞–Ω–∏–π –º–∞—Å–∏–≤ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ 1, 2, 5, 9, 4, 13, 4, 10. –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü–∏–∫–ª—É foreach —Ç–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ if –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ —î –≤ –º–∞—Å–∏–≤—ñ –µ–ª–µ–º–µ–Ω—Ç –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º, —Ä—ñ–≤–Ω–∏–º 4.
// –Ø–∫—â–æ —î - –≤–∏–≤–µ–¥—ñ—Ç—å –Ω–∞ –µ–∫—Ä–∞–Ω '–Ñ!' —ñ –≤–∏–π–¥—ñ—Ç—å —ñ–∑ —Ü–∏–∫–ª—É.–Ø–∫—â–æ –Ω—ñ ‚Äì –Ω—ñ—á–æ–≥–æ —Ä–æ–±–∏—Ç–∏ –Ω–µ —Ç—Ä–µ–±–∞.

// const numbers = [4, 1, 2, 5, 9,  13, 4, 10];

// numbers.forEach((item) => {
//     if (item === 4) {
//         console.log("–Ñ!");
//         return;
//     }
//     console.log(item);
// });

// –î–∞–Ω–∏–π –º–∞—Å–∏–≤ —á–∏—Å–ª–∞–º–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: [10, 20, 30, 50, 235, 3000, 600, 758].
// –í–∏–≤–µ–¥—ñ—Ç—å –Ω–∞ –µ–∫—Ä–∞–Ω –ª–∏—à–µ —Ç—ñ —á–∏—Å–ª–∞ –∑ –º–∞—Å–∏–≤—É, —è–∫—ñ –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –Ω–∞ —Ü–∏—Ñ—Ä—É 1, 2 —á–∏ 5.

// const numbers = [10, 20, 30, 50, 235, 3000, 600, 758];

// numbers.forEach((item) => {
//     const numberToString = String(item);
//     if (numberToString.startsWith('1') || numberToString.startsWith('2') || numberToString.startsWith('5')) {
//     console.log(numberToString);
//     }

// });

// numbers.forEach((item) => {
//     const numberToString = String(item);
//     if (numberToString[0] === '1' || numberToString[0] === '2' || numberToString[0] === '5') {
//     console.log(item);
//     }
//  });

//–†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä –∑–∞ —è–∫—ñ—Å—Ç—é amount —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏
// –¢—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∞ –º–æ–¥–µ–ª—ñ
const vehicles = [
  {
    make: "Honda",
    model: "CR-V",
    type: "suv",
    amount: 14,
    price: 24045,
    onSale: true,
  },
  {
    make: "Honda",
    model: "Accord",
    type: "sedan",
    amount: 2,
    price: 22455,
    onSale: true,
  },
  {
    make: "Mazda",
    model: "Mazda 6",
    type: "sedan",
    amount: 8,
    price: 24195,
    onSale: false,
  },
  {
    make: "Mazda",
    model: "CX-9",
    type: "suv",
    amount: 7,
    price: 31520,
    onSale: true,
  },
  {
    make: "Toyota",
    model: "4Runner",
    type: "suv",
    amount: 19,
    price: 34210,
    onSale: false,
  },
  {
    make: "Toyota",
    model: "Sequoia",
    type: "suv",
    amount: 16,
    price: 45560,
    onSale: false,
  },
  {
    make: "Toyota",
    model: "Tacoma",
    type: "truck",
    amount: 4,
    price: 24320,
    onSale: true,
  },
  {
    make: "Ford",
    model: "F-150",
    type: "truck",
    amount: 11,
    price: 27110,
    onSale: true,
  },
  {
    make: "Ford",
    model: "Fusion",
    type: "sedan",
    amount: 13,
    price: 22120,
    onSale: true,
  },
  {
    make: "Ford",
    model: "Explorer",
    type: "suv",
    amount: 6,
    price: 31660,
    onSale: false,
  },
];

// const modelName = vehicles
//   .filter(({ amount }) => amount > 12)
//   .map(({ model }) => model);

// console.table(modelName);

// const numbers = [1, 9, 0, 1, 5, 9, 1, 6];

// const filteredNumbers = numbers.filter((number, index, arr) => arr.indexOf(number) === index)
// const newFilteredNumbers = numbers.reduce((acc, number) => {
//   if (!acc.includes(number)) { acc.push(number) } return acc;
// }, [])
//   const newFilteredNumbers = numbers.reduce((acc, number) => !acc.includes(number) ? [...acc, number] : acc, [])
// console.log(filteredNumbers);
// console.log(newFilteredNumbers);